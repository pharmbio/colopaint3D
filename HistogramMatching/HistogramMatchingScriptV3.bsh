#@File(label="Input directory", description="Select the directory with input images", style="directory") inputDir
#@File(label="Reference image", description="Select the reference image", style="file") Ref
#@File(label="Output directory", description="Select the output directory", style="directory") outputDir
#@Float(label="Resolution", description="Pixel resolution", value="'") resolution
#@ String  (label = "File name contains", value = "") containString


import ij.IJ;
import histogram2.HistogramMatcher;

// Get second image - Reference

reference = IJ.openImage(Ref.getCanonicalPath());
IJ.run(reference, "8-bit", "");
ip2 = reference.getProcessor();
hist2 = ip2.getHistogram();


// Get list of input images
listOfFiles = inputDir.listFiles();
for ( i = 0; i < listOfFiles.length; i++ )
{
    // process only files (do not go into sub-folders)
    if( listOfFiles[ i ].isFile() )
    {
        // try to read file as image
        source = IJ.openImage( listOfFiles[i].getCanonicalPath() );
        if( source != null )
        { 

			// Convert to 8-bit
			IJ.run(source, "8-bit", "");

			// Match the histograms source to reference
			ip1 = source.getProcessor();
			hist1 = ip1.getHistogram();

			matcher = new HistogramMatcher();
			newHist = matcher.matchHistograms(hist1, hist2);

			ip1.applyTable(newHist);
			source.setProcessor(ip1);
			source.show();


			// Set the resolutions and plot the scalebar 
			source.getCalibration().setXUnit("µm");
			source.getCalibration().setYUnit("µm");
			IJ.run(source, "Properties...", "channels=1 slices=1 frames=1 pixel_width=" + resolution + " pixel_height=" + resolution);
			IJ.run(source, "Scale Bar...", "width=20 height=16 font=60 color=White background=None location=[Lower Right] bold");

			name = outputDir + "/" + source.getTitle() + "_matched"; 
			
			IJ.saveAs(source, "Tiff", name);
		}
    }
}


// Save referece image
reference.getCalibration().setXUnit("µm");
reference.getCalibration().setYUnit("µm");
IJ.run(reference, "Properties...", "channels=1 slices=1 frames=1 pixel_width=" + resolution + " pixel_height=" + resolution);
IJ.run(reference, "Scale Bar...", "width=20 height=16 font=60 color=White background=None location=[Lower Right] bold");
name = outputDir + "/" + reference.getTitle() + "_matched"; 
IJ.saveAs(reference, "Tiff", name);

IJ.run("Close All", "");